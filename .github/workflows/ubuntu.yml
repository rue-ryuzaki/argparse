name: Ubuntu

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  BUILD_TYPE: Release

jobs:
#  gcc-ubuntu18-11:
#    runs-on: ubuntu-18.04
#
#    strategy:
#      fail-fast: false
#      matrix:
#        gcc: ['4.8']
#        standard: [98, 11]
#
#    env:
#      CC: gcc-${{ matrix.gcc }}
#      CXX: g++-${{ matrix.gcc }}
#
#    steps:
#    - name: Install GCC
#      run: sudo apt-get install gcc-${{ matrix.gcc }} g++-${{ matrix.gcc }}
#
#    - uses: actions/checkout@v3
#
#    - name: Configure CMake
#      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_STANDARD=${{ matrix.standard }}
#
#    - name: Build
#      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
#
#    - name: Test
#      working-directory: ${{github.workspace}}/build
#      run: ctest -C ${{env.BUILD_TYPE}}

#  gcc-ubuntu18-14:
#    runs-on: ubuntu-18.04
#
#    strategy:
#      fail-fast: false
#      matrix:
#        gcc: [5, 6, 7]
#        standard: [98, 11, 14]
#
#    env:
#      CC: gcc-${{ matrix.gcc }}
#      CXX: g++-${{ matrix.gcc }}
#
#    steps:
#    - name: Install GCC
#      run: sudo apt-get install gcc-${{ matrix.gcc }} g++-${{ matrix.gcc }}
#
#    - uses: actions/checkout@v3
#
#    - name: Configure CMake
#      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_STANDARD=${{ matrix.standard }}
#
#    - name: Build
#      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
#
#    - name: Test
#      working-directory: ${{github.workspace}}/build
#      run: ctest -C ${{env.BUILD_TYPE}}

#  gcc-ubuntu18-17:
#    runs-on: ubuntu-18.04
#
#    strategy:
#      fail-fast: false
#      matrix:
#        gcc: [8, 9]
#        standard: [98, 11, 14, 17]
#
#    env:
#      CC: gcc-${{ matrix.gcc }}
#      CXX: g++-${{ matrix.gcc }}
#
#    steps:
#    - name: Install GCC
#      run: sudo apt-get install gcc-${{ matrix.gcc }} g++-${{ matrix.gcc }}
#
#    - uses: actions/checkout@v3
#
#    - name: Configure CMake
#      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_STANDARD=${{ matrix.standard }}
#
#    - name: Build
#      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
#
#    - name: Test
#      working-directory: ${{github.workspace}}/build
#      run: ctest -C ${{env.BUILD_TYPE}}

  gcc-ubuntu20-14:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        gcc: [7]
        standard: [98, 11, 14]

    env:
      CC: gcc-${{ matrix.gcc }}
      CXX: g++-${{ matrix.gcc }}

    steps:
    - name: Install GCC
      run: sudo apt install gcc-${{ matrix.gcc }} g++-${{ matrix.gcc }}

    - uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_STANDARD=${{ matrix.standard }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

  gcc-ubuntu20-17:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        gcc: [8]
        standard: [98, 11, 14, 17]

    env:
      CC: gcc-${{ matrix.gcc }}
      CXX: g++-${{ matrix.gcc }}

    steps:
    - name: Install GCC
      run: sudo apt install gcc-${{ matrix.gcc }} g++-${{ matrix.gcc }}

    - uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_STANDARD=${{ matrix.standard }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

  gcc-ubuntu22-20:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
#        gcc: [9, 10, 11, 12]
        gcc: [9, 12]
        standard: [98, 11, 14, 17, 20]

    env:
      CC: gcc-${{ matrix.gcc }}
      CXX: g++-${{ matrix.gcc }}

    steps:
    - name: Install GCC
      run: sudo apt install gcc-${{ matrix.gcc }} g++-${{ matrix.gcc }}

    - uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_STANDARD=${{ matrix.standard }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

  gcc-latest:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        standard: [98, 11, 14, 17, 20]

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_STANDARD=${{ matrix.standard }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

#  clang-ubuntu18-14:
#    runs-on: ubuntu-18.04
#
#    strategy:
#      fail-fast: false
#      matrix:
#        clang: ['3.9', '4.0']
#        standard: [98, 11, 14]
#
#    env:
#      CC: clang-${{ matrix.clang }}
#      CXX: clang++-${{ matrix.clang }}
#
#    steps:
#    - name: Install Clang
#      run: sudo apt-get install clang-${{ matrix.clang }}
#
#    - uses: actions/checkout@v3
#
#    - name: Configure CMake
#      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_STANDARD=${{ matrix.standard }}
#
#    - name: Build
#      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
#
#    - name: Test
#      working-directory: ${{github.workspace}}/build
#      run: ctest -C ${{env.BUILD_TYPE}}

#  clang-ubuntu18-17:
#    runs-on: ubuntu-18.04
#
#    strategy:
#      fail-fast: false
#      matrix:
#        clang: ['5.0', '6.0', 7, 8, 9]
#        standard: [98, 11, 14, 17]
#
#    env:
#      CC: clang-${{ matrix.clang }}
#      CXX: clang++-${{ matrix.clang }}
#
#    steps:
#    - name: Install Clang
#      run: sudo apt-get install clang-${{ matrix.clang }}
#
#    - uses: actions/checkout@v3
#
#    - name: Configure CMake
#      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_STANDARD=${{ matrix.standard }}
#
#    - name: Build
#      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
#
#    - name: Test
#      working-directory: ${{github.workspace}}/build
#      run: ctest -C ${{env.BUILD_TYPE}}

  clang-ubuntu20-17:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
#        clang: ['6.0', 7, 8]
        clang: ['6.0', 8]
        standard: [98, 11, 14, 17]

    env:
      CC: clang-${{ matrix.clang }}
      CXX: clang++-${{ matrix.clang }}

    steps:
    - name: Install Clang
      run: sudo apt install clang-${{ matrix.clang }}

    - uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_STANDARD=${{ matrix.standard }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

  clang-ubuntu20-20:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        clang: [9, 10]
        standard: [98, 11, 14, 17, 20]

    env:
      CC: clang-${{ matrix.clang }}
      CXX: clang++-${{ matrix.clang }}

    steps:
    - name: Install Clang
      run: sudo apt install clang-${{ matrix.clang }}

    - uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_STANDARD=${{ matrix.standard }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

  clang-ubuntu22-20:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
#        clang: [11, 12, 13, 14]
        clang: [11, 14]
        standard: [98, 11, 14, 17, 20]

    env:
      CC: clang-${{ matrix.clang }}
      CXX: clang++-${{ matrix.clang }}

    steps:
    - name: Install Clang
      run: sudo apt install clang-${{ matrix.clang }}

    - uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_STANDARD=${{ matrix.standard }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

  clang-latest:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        standard: [98, 11, 14, 17, 20]

    env:
      CC: clang
      CXX: clang++

    steps:
    - name: Install Clang
      run: sudo apt install clang

    - uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_STANDARD=${{ matrix.standard }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
