name: Publish

on:
  create:
    tags:
      - v*

jobs:
  build-for-linux:
    runs-on: ubuntu-latest
    env:
      BUILD_TYPE: Release
    steps:
    - uses: actions/checkout@v4

    - name: Get Changelog
      run: tail -n +5 CHANGELOG.md | sed '/^$/,$d' >> changelog

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DARGPARSE_BUILD_TESTS=OFF

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: CPack
      working-directory: ${{github.workspace}}/build
      run: cpack

    - name: Save to Artifact
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: |
          ${{github.workspace}}/include/argparse/argparse.hpp
          ${{github.workspace}}/changelog
          ${{github.workspace}}/build/*.deb
          ${{github.workspace}}/build/*.rpm

  new-release:
    runs-on: ubuntu-latest
    needs: [build-for-linux]
    steps:
    - name: Download Builds
      uses: actions/download-artifact@v4

    - name: Generate Packages Names
      id: generate_packages_names
      run: |
        echo "deb_name=$(basename build/build/*.deb)" >> $GITHUB_OUTPUT
        echo "rpm_name=$(basename build/build/*.rpm)" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: comnoco/create-release-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ArgumentParser ${{ github.ref }}
        body_path: build/changelog
        draft: false
        prerelease: false

    - name: Upload Library Header Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/include/argparse/argparse.hpp
        asset_name: argparse.hpp
        asset_content_type: text/plain

    - name: Upload DEB Linux Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/build/${{ steps.generate_packages_names.outputs.deb_name }}
        asset_name: ${{ steps.generate_packages_names.outputs.deb_name }}
        asset_content_type: application/x-debian-package

    - name: Upload RPM Linux Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/build/${{ steps.generate_packages_names.outputs.rpm_name }}
        asset_name: ${{ steps.generate_packages_names.outputs.rpm_name }}
        asset_content_type: application/x-rpm
